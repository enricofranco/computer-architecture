.MODEL SMALL
.STACK
.DATA

MAX_SCO EQU 63
MAX_WOS EQU 63

; CITATIONS DW 51 (?)
CITATIONS DW 6, 0001000010000100b, 0001000010000100b, 0001000010000101b, 0010000010000110b, 0010000001000001b, 0100000101000000b

H_INDEX_SUPPORT DB MAX_WOS+1 DUP(?)

TOTAL_WOS DW ?
TOTAL_SCO DW ?
AVERAGE_WOS DB ?
AVERAGE_SCO DB ?
T DB ?

HINDEX_SCO DB ?
HINDEX_WOS DB ?
HINDEX_MAX DB ?

.CODE
.STARTUP
MAIN:
	CALL CALC_TOTAL
	CALL CALC_HINDEX_SCO
	CALL CALC_HINDEX_WOS
	CALL CALC_HINDEX_MAX	
.EXIT

CALC_TOTAL PROC
	PUSHA
	; Init variables
	MOV TOTAL_WOS, 0
	MOV TOTAL_SCO, 0
	MOV CX, CITATIONS[0]			; Number of citations
	MOV T, CL
	MOV SI, 2						; Start from the first element (word)
	CALC_TOTAL_LOOP:
		MOV AX, CITATIONS[SI]
		MOV DX, AX					; Copy
		AND DX, 003Fh				; Save last 6 bits (Sco)
		SHR AX, 6					; Eliminate Sco bits
		AND AX, 003Fh				; Save last 6 bits (WoS)
		ADD TOTAL_WOS, AX
		ADD TOTAL_SCO, DX
		ADD SI, 2
		LOOP CALC_TOTAL_LOOP
	MOV AX, TOTAL_WOS
	DIV T
	MOV AVERAGE_WOS, AL
	MOV AX, TOTAL_SCO		
	DIV T
	MOV AVERAGE_SCO, AL
	POPA
	RET
CALC_TOTAL ENDP	

INIT_HINDEX_SUPPORT PROC
	PUSHA
	XOR SI, SI
	INIT_LOOP:
		MOV H_INDEX_SUPPORT[SI], 0
		INC SI
		CMP SI, MAX_SCO
		JBE INIT_LOOP
	POPA
	RET
INIT_HINDEX_SUPPORT ENDP

CALC_HINDEX_SCO PROC
	PUSHA
	CALL INIT_HINDEX_SUPPORT
	XOR CH, CH
	MOV CL, T
	MOV SI, 2
	COUNT_SCO_LOOP:
		MOV DI, CITATIONS[SI]
		AND DI, 003Fh				; Save last 6 bits (Sco)
	    INC H_INDEX_SUPPORT[DI]
		ADD SI, 2
		LOOP COUNT_SCO_LOOP
	MOV SI, MAX_SCO-1
	; Sum elements with highest value
	SUM_SCO_LOOP:
		MOV AH, H_INDEX_SUPPORT[SI+1]
		ADD H_INDEX_SUPPORT[SI], AH
		DEC SI
		CMP SI, 0
		JGE SUM_SCO_LOOP
		
	; Find the first element where counter >= index
	MOV SI, MAX_SCO
	XOR AH, AH
	HINDEX_SCO_LOOP:
		MOV AL, H_INDEX_SUPPORT[SI+1]
		CMP AX, SI
		JAE HINDEX_SCO_COMPUTED
		DEC SI
		CMP SI, 0
		JGE HINDEX_SCO_LOOP
	HINDEX_SCO_COMPUTED:
	INC SI							; H-index computed 		
	MOV AX, SI
	MOV HINDEX_SCO, AL	
	POPA                     
	RET
CALC_HINDEX_SCO ENDP	

CALC_HINDEX_WOS PROC
	PUSHA
	CALL INIT_HINDEX_SUPPORT
	XOR CH, CH
	MOV CL, T
	MOV SI, 2
	COUNT_WOS_LOOP:
		MOV DI, CITATIONS[SI]
		SHR DI, 6					; Move WoS bits
		AND DI, 003Fh				; Save last 6 bits (WoS)
	    INC H_INDEX_SUPPORT[DI]
		ADD SI, 2
		LOOP COUNT_WOS_LOOP
	MOV SI, MAX_WOS-1
	; Sum elements with highest value
	SUM_WOS_LOOP:
		MOV AH, H_INDEX_SUPPORT[SI+1]
		ADD H_INDEX_SUPPORT[SI], AH
		DEC SI
		CMP SI, 0
		JGE SUM_WOS_LOOP
		
	; Find the first element where counter >= index
	MOV SI, MAX_WOS
	XOR AH, AH
	HINDEX_WOS_LOOP:
		MOV AL, H_INDEX_SUPPORT[SI+1]
		CMP AX, SI
		JAE HINDEX_WOS_COMPUTED
		DEC SI
		CMP SI, 0
		JGE HINDEX_WOS_LOOP
	HINDEX_WOS_COMPUTED:
	INC SI							; H-index computed 		
	MOV AX, SI
	MOV HINDEX_WOS, AL	
	POPA                     
	RET
CALC_HINDEX_WOS ENDP

CALC_HINDEX_MAX PROC
	PUSHA
	CALL INIT_HINDEX_SUPPORT
	XOR CH, CH
	MOV CL, T
	MOV SI, 2
	COUNT_MAX_HINDEX_LOOP:
		MOV AX, CITATIONS[SI]
		MOV BX, AX
		AND AX, 3Fh					; Sco
		SHR BX, 6
		AND BX, 3Fh					; WoS
		CMP BX, AX
		JA COPY_WOS
		; Ax > BX <=> Sco > WoS
		MOV DI, AX
		JMP MAX_FOUND
		COPY_WOS:
		MOV DI, BX		
		MAX_FOUND:
		INC H_INDEX_SUPPORT[DI]
		ADD SI, 2
		LOOP COUNT_MAX_HINDEX_LOOP
	MOV SI, MAX_WOS-1
	; Sum elements with highest value
	SUM_MAX_HINDEX_LOOP:
		MOV AH, H_INDEX_SUPPORT[SI+1]
		ADD H_INDEX_SUPPORT[SI], AH
		DEC SI
		CMP SI, 0
		JGE SUM_MAX_HINDEX_LOOP
		
	; Find the first element where counter >= index
	MOV SI, MAX_WOS
	XOR AH, AH
	HINDEX_MAX_LOOP:
		MOV AL, H_INDEX_SUPPORT[SI+1]
		CMP AX, SI
		JAE HINDEX_MAX_COMPUTED
		DEC SI
		CMP SI, 0
		JGE HINDEX_MAX_LOOP
	HINDEX_MAX_COMPUTED:
	INC SI							; H-index computed 		
	MOV AX, SI
	MOV HINDEX_MAX, AL	
	POPA                     
	RET
CALC_HINDEX_MAX ENDP	

END