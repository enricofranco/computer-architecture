.MODEL SMALL
.STACK
.DATA
A_TO_B DB 16
B_TO_TP DB 29
C_TO_D DB 4
D_TO_TP DB 45

N_A EQU 4
N_B EQU 4
N_C EQU 4
N_D EQU 4
                     
A_SCHED DW N_A DUP (080AH, 0900H, 092DH, 0A1EH)
B_SCHED DW N_B DUP (070AH, 080FH, 0905H, 0A28H)

TIME_FROM_A DW N_A DUP (?)

H_LEAVE DW 0A0FH

ARR_TIME_SWAP DW ?
DEP_TIME_SWAP DW ?
ARR_TIME_OFF DW ?
DURATION DW ?

.CODE
.STARTUP

MAIN PROC
	CALL PREPROCESSING
;	CALL ITEM1
 	CALL ITEM2
		
	.EXIT
MAIN ENDP

PREPROCESSING PROC  	
	PUSHA
	XOR SI, SI
	XOR DI, DI
	
	OUT_LOOP:
		MOV AX, A_SCHED[SI]
		ADD AL, A_TO_B
		CALL CORRECT_HOUR
		
		IN_LOOP:                                  
			CMP AX, B_SCHED[DI]
			JA NEXT_ELEMENT_IN
			; If the hour is good, save the index
			MOV TIME_FROM_A[SI], DI
			JMP NEXT_ELEMENT_OUT
			NEXT_ELEMENT_IN:
			INC DI
			INC DI
			CMP DI, N_B*2
			JB IN_LOOP
		NEXT_ELEMENT_OUT:
		INC SI
		INC SI
		CMP SI, N_A*2
		JB OUT_LOOP	
	POPA	
	RET
PREPROCESSING ENDP

CORRECT_HOUR PROC
	CMP AL, 60
	JB CORRECT_MIN
	SUB AL, 60
	INC AH
CORRECT_MIN:
	RET
CORRECT_HOUR ENDP

ITEM1 PROC
	PUSHA
	XOR SI, SI
	
SEARCH_HOUR_1:
	MOV AX, A_SCHED[SI]
	CMP AX, H_LEAVE
	JAE HOUR_FOUND_1
	INC SI
	INC SI
	JMP SEARCH_HOUR_1

HOUR_FOUND_1:
	ADD AL, A_TO_B
	CALL CORRECT_HOUR
	MOV ARR_TIME_SWAP, AX
	
	MOV DI, TIME_FROM_A[SI]
	MOV BX, B_SCHED[DI]
	MOV DEP_TIME_SWAP, BX
	
	MOV AX, BX
	ADD AL, B_TO_TP
	CALL CORRECT_HOUR
	MOV ARR_TIME_OFF, AX
	
	MOV BX, H_LEAVE
	CMP BL, AL
	JBE CONTINUE
	ADD AL, 60
	DEC AH	
	CONTINUE:
	SUB AL, BL
	SUB AH, BH
	MOV DURATION, AX	
		
	POPA
	RET	
ITEM1 ENDP

ITEM2 PROC
	PUSHA
	
	XOR SI, SI
	MOV AX, H_LEAVE
	CMP AX, A_SCHED[(N_A-1)*2]
	JAE BAD_CHOICE
	
SEARCH_HOUR_2:
	MOV AX, A_SCHED[SI]
	CMP AX, H_LEAVE
	JAE HOUR_FOUND_2
	INC SI
	INC SI
	JMP SEARCH_HOUR_2

HOUR_FOUND_2:
	ADD AL, A_TO_B
	CALL CORRECT_HOUR

	MOV DI, TIME_FROM_A[SI]
	MOV BX, B_SCHED[DI]
	
	CMP AX, BX
	JB GOOD_CHOICE
BAD_CHOICE:	
	NOP							; Choice crossing two days
	JMP END_ITEM2
		
GOOD_CHOICE:
	MOV ARR_TIME_SWAP, AX
	
	MOV DEP_TIME_SWAP, BX
	
	MOV AX, BX
	ADD AL, B_TO_TP
	CALL CORRECT_HOUR
	MOV ARR_TIME_OFF, AX
	
	MOV BX, H_LEAVE
	CMP BL, AL
	JBE CONTINUE2
	ADD AL, 60
	DEC AH	
	CONTINUE2:
	SUB AL, BL
	SUB AH, BH
	MOV DURATION, AX	

END_ITEM2:	
	POPA
	RET	
ITEM2 ENDP

.EXIT
END